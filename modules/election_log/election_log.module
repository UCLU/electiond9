<?php

/**
 * @file
 * Dedicated logging for webform submissions.
 */

use Drupal\election\Entity\ElectionCandidateInterface;
use Drupal\election\Entity\ElectionInterface;
use Drupal\election\Entity\ElectionPostInterface;

/**
 * Implements hook_webform_help_info().
 */
function election_log_webform_help_info() {
  $help = [];
  // $help['submissions_log'] = [
  //   'group' => 'submissions',
  //   'title' => t('Submissions: Log'),
  //   'content' => t('The <strong>Submissions log</strong> page tracks all submission events for all webforms that have submission logging enabled. Submission logging can be enabled globally or on a per webform basis.'),
  //   'routes' => [
  //     // @see /admin/structure/webform/results/log
  //     'entity.webform_submission.collection_log',
  //   ],
  // ];
  // $help['submission_log'] = [
  //   'group' => 'submission',
  //   'title' => t('Submission: Log'),
  //   'content' => t("The <strong>Log</strong> page shows all events and transactions for a submission."),
  //   'video_id' => 'submission',
  //   'routes' => [
  //     // @see /admin/structure/webform/manage/{webform}/submission/{webform_submission}/log
  //     'entity.webform_submission.log',
  //     // @see /node/{node}/webform/submission/{webform_submission}/log
  //     'entity.node.webform_submission.log',
  //   ],
  // ];
  // $help['results_log'] = [
  //   'group' => 'submissions',
  //   'title' => t('Results: Log'),
  //   'content' => t('The <strong>Results Log</strong> lists all webform submission events for the current webform.'),
  //   'routes' => [
  //     // @see /admin/structure/webform/manage/{webform}/results/log
  //     'entity.webform.results_log',
  //   ],
  // ];
  // $help['webform_node_results_log'] = [
  //   'group' => 'webform_nodes',
  //   'title' => t('Webform Node: Results: Log'),
  //   'content' => t('The <strong>Results Log</strong> lists all webform submission events for the current webform.'),
  //   'routes' => [
  //     // @see /node/{node}/webform/results/log
  //     'entity.node.webform.results_log',
  //   ],
  // ];
  return $help;
}

/**
 * Implements hook_ENTITY_TYPE_delete().
 */
function election_log_election_delete(ElectionInterface $election) {
  \Drupal::database()->delete('election_log')
    ->condition('election_id', $election->id())
    ->execute();
}

/**
 * Implements hook_ENTITY_TYPE_delete().
 */
function election_log_election_post_delete(ElectionPostInterface $election_post) {
  \Drupal::database()->delete('election_log')
    ->condition('post_id', $election_post->id())
    ->execute();

  // @todo log post deletion to election
}

/**
 * Implements hook_ENTITY_TYPE_delete().
 */
function election_log_election_candidate_delete(ElectionCandidateInterface $election_candidate) {
  \Drupal::database()->delete('election_log')
    ->condition('candidate_id', $election_candidate->id())
    ->execute();

  // @todo log candidate deletion to post
}
